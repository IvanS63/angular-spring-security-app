1) create model:    user.ts class and add fields with types
2) create component:  user.component.ts and declare it as @Component with specifying selector (will be used for registering in app.module.ts) and templateUrl (html file) and styleUrls (css files).
3) register component class in app.module.ts in @NgModule section
4) fill in some data in html and css files.

5) in component implement onInit method
6) component is some king of java controller analogue, therefore component injects service and calls its method.
7) for constructor injection @Injectable annotation is used.

8) RouterModule (usually in app.module.ts) creates a link between URL and component (path/component).







Format code: shft alt F
start server: ng serve

Create angular module: ng g c login
Create a service: ng generate service auth   (for name 'auth')



what is token:
https://grokonez.com/spring-framework/spring-security/angular-spring-boot-jwt-authentication-example-angular-6-spring-security-mysql-full-stack-part-1-overview-and-architecture
frontend:
https://grokonez.com/frontend/angular/angular-6/angular-spring-boot-jwt-authentication-example-angular-6-spring-security-mysql-full-stack-part-3-build-frontend
backend:
https://grokonez.com/spring-framework/spring-security/angular-spring-boot-jwt-authentication-example-angular-6-spring-security-mysql-full-stack-part-2-build-backend
